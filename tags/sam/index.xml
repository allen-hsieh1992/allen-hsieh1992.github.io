<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>SAM on 艾倫的開發心路歷程</title><link>https://allenhsieh1992.com/tags/sam/</link><description>Recent content in SAM on 艾倫的開發心路歷程</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Copyright © 2021-2025 Allen Hsieh. All Rights Reserved.</copyright><lastBuildDate>Thu, 15 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://allenhsieh1992.com/tags/sam/index.xml" rel="self" type="application/rss+xml"/><item><title>SAM Part5: 部署 Dynamodb</title><link>https://allenhsieh1992.com/posts/aws/sam-part5-dynamodb/</link><pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part5-dynamodb/</guid><description>建立 DynamoDB SAM 有定義一個 AWS::Serverless::SimpleTable 的 Resource 給 DynamoDb。 我在 template.yaml 的 Resources 下增加了以下的 code 1 Table: 2 Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html 3 Properties: 4 PrimaryKey: 5 Name: id 6 Type: String 7 TableName: Users 接著在 SAM Deploy 時，會看到</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>2023 回顧</title><link>https://allenhsieh1992.com/posts/aws/2023-aws-review/</link><pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/2023-aws-review/</guid><description>文章寫作 努力維持平均一個月寫一篇文章~ 今年一共貢獻了12篇文章，上半年，主要在準備 AWS 執照，所以就都專注於執照的筆記，而下半年由於想做一些 side project</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part4: 雲端測試</title><link>https://allenhsieh1992.com/posts/aws/sam-part4-cloud-testing/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part4-cloud-testing/</guid><description>直接打 API Gateway 在 Part3 中，Deployment 完時，CloudFomration 的 Output 可以看到 ApiGateway 的 URI。如果沒有記住，我們也可以在 AWS Console 中的 API Gateway Stage 找到</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part3: 雲端部署</title><link>https://allenhsieh1992.com/posts/aws/sam-part3-deployment/</link><pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part3-deployment/</guid><description>SAM 部署 SAM 提供了 deployment 的指令，並且在 deployment 的 options 中有一個 guided，可以透過回答問題的方式，幫助另一次部署的人快速部署。記得在 deploy 之前，要先執行過 sam bu</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part2: 地端測試</title><link>https://allenhsieh1992.com/posts/aws/sam-part2-local-testing/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part2-local-testing/</guid><description>SAM Local 這邊使用 sam local start-api 在地端起 Lambda Function 來測試，需要注意的是，這邊需要是會是在地端啟動 Docker ，所以需要將 Docker 預先安裝好。 1$ sam local start-api 2 3Initializing the lambda functions containers. 4Local image is out of date and will</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part1: Node 專案初始化</title><link>https://allenhsieh1992.com/posts/aws/sam-part1-init-node-project/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part1-init-node-project/</guid><description>SAM Initialization 這邊使用 sam init 來初始化專案。 1$ sam init 2 3You can preselect a particular runtime or package type when using the `sam init` experience. 4Call `sam init --help` to learn more. 5 6Which template source would you like to use? 7 1 - AWS Quick Start Templates 8 2 - Custom Template Location 9Choice: 1 10 11Choose an AWS Quick</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Build AWS Lambda Hello World Function By SAM</title><link>https://allenhsieh1992.com/posts/aws/build-aws-lambda-hello-world-function-by-sam/</link><pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/build-aws-lambda-hello-world-function-by-sam/</guid><description>以前當我第一次接觸 AWS Lambda Function 時，是在上 AWS Training 課程，使用 AWS Console 建立了一隻 Hello World。而 SAM (Serverless Application Model) 是一個開源的程式，主要在 CloudFormation 的基礎上擴展，專門用來開發 Serverless</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item></channel></rss>