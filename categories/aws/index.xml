<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>AWS on 艾倫的開發心路歷程</title><link>https://allenhsieh1992.com/categories/aws/</link><description>Recent content in AWS on 艾倫的開發心路歷程</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>Copyright © 2021-2025 Allen Hsieh. All Rights Reserved.</copyright><lastBuildDate>Thu, 13 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://allenhsieh1992.com/categories/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Firehose 專案分享</title><link>https://allenhsieh1992.com/posts/aws/firehose-part4-production-use-case/</link><pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/firehose-part4-production-use-case/</guid><description>前面已經分享了： Firehose 介紹 Firehose 基礎建置 Firehose Dynamic Partitioning POC 現在要分享在專案中實際使用的範例。 地端架構 Web Application：共有兩組 Micro Service，處理不</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Firehose Dynamic Partitioning</title><link>https://allenhsieh1992.com/posts/aws/firehose-part3-dynamic-partitioning/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/firehose-part3-dynamic-partitioning/</guid><description>在上一篇中，我們有介紹到如何建立一個最基本的 Firehose，這篇主要講進階功能，使用 Dynamic Partitioning。 S3 根據 Folder 的分類，對 performance 是有影</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Firehose 建置</title><link>https://allenhsieh1992.com/posts/aws/firehose-part2-stream-creation/</link><pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/firehose-part2-stream-creation/</guid><description>架構 今日架構，會建立一個 Firehose 和 S3，並透過 AWS CLI 傳送資料到 Firehose 裡面，最後 Output 到 S3 中。 S3 建置 進入到 S3 畫面，並點下 &amp;ldquo;Create Bucket&amp;rdquo; 按鈕 填寫 Bucket name（注意 S3 Bucket 是 Global U</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Firehose 101</title><link>https://allenhsieh1992.com/posts/aws/firehose-part1-intro/</link><pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/firehose-part1-intro/</guid><description>什麼是 Firehose Amazon Kinesis Data Firehose（簡稱 Firehose）是 AWS 提供的一種實時數據流處理服務，主要用於收集、轉換和加載數據到各種儲存與分析平台，例</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part5: 部署 Dynamodb</title><link>https://allenhsieh1992.com/posts/aws/sam-part5-dynamodb/</link><pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part5-dynamodb/</guid><description>建立 DynamoDB SAM 有定義一個 AWS::Serverless::SimpleTable 的 Resource 給 DynamoDb。 我在 template.yaml 的 Resources 下增加了以下的 code 1 Table: 2 Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html 3 Properties: 4 PrimaryKey: 5 Name: id 6 Type: String 7 TableName: Users 接著在 SAM Deploy 時，會看到</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>什麼是 AWS Community Builder</title><link>https://allenhsieh1992.com/posts/aws/what-is-aws-community-builder/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/what-is-aws-community-builder/</guid><description>什麼是 AWS Community Builder Community Builder 是 AWS 社群中的一群志願者和熱心人士，他們致力於促進 AWS 技術和知識的分享與傳播。主要透過部落格、社交媒體、演講等多種方式與社群互動</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>2023 回顧</title><link>https://allenhsieh1992.com/posts/aws/2023-aws-review/</link><pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/2023-aws-review/</guid><description>文章寫作 努力維持平均一個月寫一篇文章~ 今年一共貢獻了12篇文章，上半年，主要在準備 AWS 執照，所以就都專注於執照的筆記，而下半年由於想做一些 side project</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part4: 雲端測試</title><link>https://allenhsieh1992.com/posts/aws/sam-part4-cloud-testing/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part4-cloud-testing/</guid><description>直接打 API Gateway 在 Part3 中，Deployment 完時，CloudFomration 的 Output 可以看到 ApiGateway 的 URI。如果沒有記住，我們也可以在 AWS Console 中的 API Gateway Stage 找到</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part3: 雲端部署</title><link>https://allenhsieh1992.com/posts/aws/sam-part3-deployment/</link><pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part3-deployment/</guid><description>SAM 部署 SAM 提供了 deployment 的指令，並且在 deployment 的 options 中有一個 guided，可以透過回答問題的方式，幫助另一次部署的人快速部署。記得在 deploy 之前，要先執行過 sam bu</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part2: 地端測試</title><link>https://allenhsieh1992.com/posts/aws/sam-part2-local-testing/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part2-local-testing/</guid><description>SAM Local 這邊使用 sam local start-api 在地端起 Lambda Function 來測試，需要注意的是，這邊需要是會是在地端啟動 Docker ，所以需要將 Docker 預先安裝好。 1$ sam local start-api 2 3Initializing the lambda functions containers. 4Local image is out of date and will</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>SAM Part1: Node 專案初始化</title><link>https://allenhsieh1992.com/posts/aws/sam-part1-init-node-project/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/sam-part1-init-node-project/</guid><description>SAM Initialization 這邊使用 sam init 來初始化專案。 1$ sam init 2 3You can preselect a particular runtime or package type when using the `sam init` experience. 4Call `sam init --help` to learn more. 5 6Which template source would you like to use? 7 1 - AWS Quick Start Templates 8 2 - Custom Template Location 9Choice: 1 10 11Choose an AWS Quick</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>什麼是 AWS Lambda</title><link>https://allenhsieh1992.com/posts/aws/what-is-lambda/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/what-is-lambda/</guid><description>什麼是無伺服器服務 無伺服器服務是一種雲的架構，將應用程式的部署和管理抽象化，讓開發者可以專心的開發應用程式。 以下圖為例 On Premise（本地</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Build AWS Lambda Hello World Function By SAM</title><link>https://allenhsieh1992.com/posts/aws/build-aws-lambda-hello-world-function-by-sam/</link><pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/build-aws-lambda-hello-world-function-by-sam/</guid><description>以前當我第一次接觸 AWS Lambda Function 時，是在上 AWS Training 課程，使用 AWS Console 建立了一隻 Hello World。而 SAM (Serverless Application Model) 是一個開源的程式，主要在 CloudFormation 的基礎上擴展，專門用來開發 Serverless</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>使用 AWS Cognito CLI 建立 User Pool</title><link>https://allenhsieh1992.com/posts/aws/create-cognito-user-pool-by-aws-cli/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/create-cognito-user-pool-by-aws-cli/</guid><description>個人用戶管理對於許多網站 或 App 都是不可缺少的，大家有可能會經常煩惱要怎麼樣讓自己的服務，可以透過 Google 、Facebook 等第三方認證，或者擁有自己</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>使用 Lightsail 架設 WordPress 網站</title><link>https://allenhsieh1992.com/posts/aws/use-lightsail-to-create-wordpress-website/</link><pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/use-lightsail-to-create-wordpress-website/</guid><description>在大學時間，我曾經使用過 WordPress.com 只是最後覺得 WordPress.com 限制太多，想要達到我想要的效果，又需要額外花錢，所以最後就放棄了。這邊不會花太多時間解釋 WordPress com &amp;amp; org 的差</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>DynamoDB Certification Note</title><link>https://allenhsieh1992.com/posts/aws/dynamodb-certification-note/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/dynamodb-certification-note/</guid><description>Basic of DynamoDB DynamoDB 是 AWS NOSQL Database. performance 的部分，DynamoDB 的資料存在 SSD Data 會自動備份到不同的 AZ ，預防 single point failure DynamoDB 以 table 為單位，裡面每筆的 Row 為 Item ，而每個 Item 的 Column 為 Attribute DynamoDB 有</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>S3 Certification Note</title><link>https://allenhsieh1992.com/posts/aws/s3-certification-note/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/s3-certification-note/</guid><description>Basic of S3 已 Object 為單位的儲存空間 ，而每個 Object 儲存在 Bucket 每 Object 的大小可以從 0 byptes to 5 TB，但 Bucket 沒有儲存中間上限 每個 S3 都會有獨立的 URL，這個是全球唯一的，所</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Config Certification Note</title><link>https://allenhsieh1992.com/posts/aws/config-certification-note/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/config-certification-note/</guid><description>Basic Resource Type : Config 是 Region Level 服務，預設存取當下 Region 下 Config 支援服務的全部設定，可以指定特定服務 可以存取 Global 服務的設定 所有 Config 紀錄存取到 S3 單一 Resource 可以看 Configuration Timeline detailed 包含 和其</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CloudFormation Certification Note</title><link>https://allenhsieh1992.com/posts/aws/cloudformation-certification-note/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/cloudformation-certification-note/</guid><description>實踐 Infrastructure as Code，不需要手動建立資源，而且可以對 Source Code 做 Version Control。 CloudFormation 本身是免費的，只需要付建立的資源費用即可。 可以透過 CloudFormation Designer 產生基本的架</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CloudTail Certification Note</title><link>https://allenhsieh1992.com/posts/aws/cloudtail-certification-note/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/cloudtail-certification-note/</guid><description>CloudTail 主要用於監控和稽核 AWS 資源的 API Call Trails 每個 Region 上限五個 Type All Region : 所有的 Region Event Log 存在一個 S3 Bucket One Region : 指定特定 Region Event Log Organization Trail : 可以 Log 整個 AWS Organization 的 Event，只有 management</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Route53 Certification Note</title><link>https://allenhsieh1992.com/posts/aws/route53-certification-note/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/route53-certification-note/</guid><description>Route53 是 AWS 的 Domain Name System (DNS)，名字中有 53 的原因是因為 DNS 的 Port 是 53。 Route53 也是一個 DNS Register ，可以在上面購買 Domain Name TTL (Time to Live) : 單位為秒，告訴 Browser 去 Cache Response 的 Record 多少時間</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Lambda Certification Note</title><link>https://allenhsieh1992.com/posts/aws/lambda-certification-note/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/lambda-certification-note/</guid><description>Lambda 是 AWS 無伺服器的運算服務，以下幾點為 AWS 端的責任 Capacity Provisioning OS Patching Auto Scaling High Availability Basic Setting Memory usage 會影響 CPU timeout 設定，最多十五分鐘 role to execute the function 收費根據以下三點 Request 數量 Lambda Function 處理 request</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Systems Manager (SSM) Certification Note</title><link>https://allenhsieh1992.com/posts/aws/ssm-certification-note/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/ssm-certification-note/</guid><description>可以用來管理 EC2 或是 On-Prime 的機器 需要安裝 SSM Agent 在機器上 AWS Linux AMI 和部分 Ubuntu AMI 預設已經裝好 Agent 了。 EC2 需要有 IAM Rule 的權限根 SSM 溝通 Patch 自動化 支援 Windows or Linux 可以整合 CloudWatch 和 AWS Config</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>Beanstalk Certification Note</title><link>https://allenhsieh1992.com/posts/aws/beanstalk-certification-note/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/beanstalk-certification-note/</guid><description>Basic Beanstalk 是 PAAS 服務，可以透過 Config (.ebextensions) 設定去建立環境，例如基本的 Three Tire Architecture : Client -&amp;gt; Server -&amp;gt; DB，而我們只需要專注在 Application 上的開發 Beanstalk 本身是免費的，只需要付原本底下的資源</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CodeDeploy Certification Note</title><link>https://allenhsieh1992.com/posts/aws/codedeploy-certification-note/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/codedeploy-certification-note/</guid><description>CodeDeploy 是 AWS 部署服務，類似 Ansible, Chef, Puppet 等等 要部署的機器上面需要安裝 CodeDeploy Agent, Agent 會一直從 CodeDeploy 拉需要執行的動作 Support Ec2, Lambda, ECS Basic Step of EC2 需要部署的機器上面需要安裝 CodeDeploy Agent Agent 會一直</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CodePipeline Certification Note</title><link>https://allenhsieh1992.com/posts/aws/codepipeline-certification-note/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/codepipeline-certification-note/</guid><description>Basic Stage 裡面可以有許多 Action， Stage 跟 Stage 之間是可以關聯的 runOrder 可以用來決定順序性， 預設是1 ，同樣的 runOrder 代表同時跑 Artifacts: S3 預設使用 AWS/S3 key 加密，但可以選擇使用</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CodeBuild Certification Note</title><link>https://allenhsieh1992.com/posts/aws/codebuild-certification-note/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/codebuild-certification-note/</guid><description>CodeBuild Basic AWS 託管 Build Service類似 Jenkins。可以編譯，跑單元測試，或者打包 package 到 artifacts. 根據 運行力 和 執行時間來計價 Build Log 可以送到 CloudWatch or S3 CodeBuild 是使用 Docker 技術</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>CodeCommit Certification Note</title><link>https://allenhsieh1992.com/posts/aws/codecommit-certification-note/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/codecommit-certification-note/</guid><description>Basic AWS 的 Git Version Control 服務，像是 Github 可以跟 CodeBuild 、 Jenkins 或者其他 CI 整合 可以透過 HTTPS or SSH connect，可以建立 IAM User 並在裡面設定 ssh key https git credential (user name and password) 可以透過 CloudTail 監控哪個</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>VPC Certification Note</title><link>https://allenhsieh1992.com/posts/aws/vpc-certification-note/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/vpc-certification-note/</guid><description>Basic of VPC 每個 Region 預設上限五個 VPC 支援 IPv4 or IPv6 每個 VPC 可以有五個 CIDR ，每個 CIDR 最大 /16 (65536 IP) , 最小 /28 (16 IP) VPC 是 私有網路，所以只有以下 Range 是允許的 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 要注意，VPC</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item><item><title>EC2 Certification Note</title><link>https://allenhsieh1992.com/posts/aws/ec2-certification-note/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://allenhsieh1992.com/posts/aws/ec2-certification-note/</guid><description>EC2 Purchase Option On-Demand Instances 用多少付多少，不需要提前預付也也不需要合約，根據秒來計費 不同 Region 有不同的 Instance &amp;amp; CPU 限制數量，可以透過 AWS Support Center 提高上限 Reserved Instances 需要一年或三年的合</description><enclosure url="https://allenhsieh1992.com/images/aws.webp" length="6110" type="image/.webp"/></item></channel></rss>